name: Build and Deploy

on:
  push:
    branches:
      - "ci-cd"
  pull_request:
    branches:
      - "master"
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    container:
      image: node:14.17-alpine
    steps:
      - uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      - name: Install dependencies
        run: npm ci --cache .npm --prefer-offline
#      - name: Generate prisma
#        run: "npm run generate:prisma"
      - name: Set public host variable
        run: echo "BACKEND_VERSION=${{ github.sha }} \n NEXT_PUBLIC_HOST=http://${{ secrets.SSH_HOST }}" > .env.local
        env:
          NEXT_PUBLIC_HOST: ${{ secrets.SSH_HOST }}
      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_HOST: http://${{ secrets.SSH_HOST }}
          NEXT_PUBLIC_FRONTEND_VERSION: ${{ github.sha }}
      - name: Archive build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            .next
            prisma
            nexus.tsconfig.json
            next.config.js
            package.json
            package-lock.json
  deploy:
    needs: build
    runs-on: ubuntu-20.04
#    container:
#      image: node:14.17.0-stretch
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      - name: Copy builde files to the server
        run: |
          rsync -zavP \
          --delete \
          . $SSH_USER@$SSH_HOST:~/graphql-blog-demo/
#        run: |
#          scp -r ./.next package.json nexus.tsconfig.json next.config.js prisma SSH_USER@$SSH_HOST:~/graphql-blog-demo/
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      - name: Restart app
        run: |
          ssh $SSH_USER@$SSH_HOST "cd ~/graphql-blog-demo && npm install --production && cd .. && BACKEND_VERSION=$BACKEND_VERSION pm2 restart all --update-env"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          BACKEND_VERSION: ${{ github.sha }}
